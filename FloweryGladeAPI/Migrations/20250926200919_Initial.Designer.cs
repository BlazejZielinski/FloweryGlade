// <auto-generated />
using FloweryGladeAPI.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FloweryGladeAPI.Migrations
{
    [DbContext(typeof(FlowerShopDbContext))]
    [Migration("20250926200919_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FloweryGladeAPI.Entities.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlowerShopID")
                        .HasColumnType("int");

                    b.Property<string>("HouseNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FlowerShopID")
                        .IsUnique();

                    b.ToTable("Addresss");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.Client", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FlowerShopID")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FlowerShopID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.FlowerShop", b =>
                {
                    b.Property<int>("FlowerShopID")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FlowerShopID"));

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("FlowerShopID");

                    b.ToTable("FlowerShops");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.Flowers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FlowerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FlowerPrice")
                        .HasColumnType("float");

                    b.Property<int>("FlowerShopID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FlowerShopID");

                    b.ToTable("Flowers");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("FlowerShopID")
                        .HasColumnType("int");

                    b.Property<string>("UserLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("FlowerShopID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.Address", b =>
                {
                    b.HasOne("FloweryGladeAPI.Entities.FlowerShop", "FlowerShop")
                        .WithOne("Address")
                        .HasForeignKey("FloweryGladeAPI.Entities.Address", "FlowerShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowerShop");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.Client", b =>
                {
                    b.HasOne("FloweryGladeAPI.Entities.FlowerShop", "FlowerShop")
                        .WithMany("Clients")
                        .HasForeignKey("FlowerShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowerShop");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.Flowers", b =>
                {
                    b.HasOne("FloweryGladeAPI.Entities.FlowerShop", "FlowerShop")
                        .WithMany("Flower")
                        .HasForeignKey("FlowerShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowerShop");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.User", b =>
                {
                    b.HasOne("FloweryGladeAPI.Entities.FlowerShop", "FlowerShop")
                        .WithMany("Users")
                        .HasForeignKey("FlowerShopID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FlowerShop");
                });

            modelBuilder.Entity("FloweryGladeAPI.Entities.FlowerShop", b =>
                {
                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("Clients");

                    b.Navigation("Flower");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
